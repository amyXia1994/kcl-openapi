"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Restore:
    """
    Restore is a Velero resource that represents the application of resources from a Velero backup to a target Kubernetes cluster.

    Attributes
    ----------
    apiVersion : str, default is "velero.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Restore", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VeleroIoV1RestoreSpec, default is Undefined, optional
        spec
    status : VeleroIoV1RestoreStatus, default is Undefined, optional
        status
    """


    apiVersion: "velero.io/v1" = "velero.io/v1"

    kind: "Restore" = "Restore"

    metadata?: v1.ObjectMeta

    spec?: VeleroIoV1RestoreSpec

    status?: VeleroIoV1RestoreStatus


schema VeleroIoV1RestoreSpec:
    """
    RestoreSpec defines the specification for a Velero restore.

    Attributes
    ----------
    backupName : str, default is Undefined, required
        BackupName is the unique name of the Velero backup to restore from.
    excludedNamespaces : [str], default is Undefined, optional
        ExcludedNamespaces contains a list of namespaces that are not included in the restore.
    excludedResources : [str], default is Undefined, optional
        ExcludedResources is a slice of resource names that are not included in the restore.
    existingResourcePolicy : str, default is Undefined, optional
        ExistingResourcePolicy specifies the restore behavior for the kubernetes resource to be restored
    includeClusterResources : bool, default is Undefined, optional
        IncludeClusterResources specifies whether cluster-scoped resources should be included for consideration in the restore. If null, defaults to true.
    includedNamespaces : [str], default is Undefined, optional
        IncludedNamespaces is a slice of namespace names to include objects from. If empty, all namespaces are included.
    includedResources : [str], default is Undefined, optional
        IncludedResources is a slice of resource names to include in the restore. If empty, all resources in the backup are included.
    itemOperationTimeout : str, default is Undefined, optional
        ItemOperationTimeout specifies the time used to wait for RestoreItemAction operations The default value is 1 hour.
    namespaceMapping : {str:str}, default is Undefined, optional
        NamespaceMapping is a map of source namespace names to target namespace names to restore into. Any source namespaces not included in the map will be restored into namespaces of the same name.
    orLabelSelectors : [VeleroIoV1RestoreSpecOrLabelSelectorsItems0], default is Undefined, optional
        OrLabelSelectors is list of metav1.LabelSelector to filter with when restoring individual objects from the backup. If multiple provided they will be joined by the OR operator. LabelSelector as well as OrLabelSelectors cannot co-exist in restore request, only one of them can be used
    preserveNodePorts : bool, default is Undefined, optional
        PreserveNodePorts specifies whether to restore old nodePorts from backup.
    restorePVs : bool, default is Undefined, optional
        RestorePVs specifies whether to restore all included PVs from snapshot
    scheduleName : str, default is Undefined, optional
        ScheduleName is the unique name of the Velero schedule to restore from. If specified, and BackupName is empty, Velero will restore from the most recent successful backup created from this schedule.
    hooks : VeleroIoV1RestoreSpecHooks, default is Undefined, optional
        hooks
    labelSelector : VeleroIoV1RestoreSpecLabelSelector, default is Undefined, optional
        label selector
    restoreStatus : VeleroIoV1RestoreSpecRestoreStatus, default is Undefined, optional
        restore status
    """


    backupName: str

    excludedNamespaces?: [str]

    excludedResources?: [str]

    existingResourcePolicy?: str

    includeClusterResources?: bool

    includedNamespaces?: [str]

    includedResources?: [str]

    itemOperationTimeout?: str

    namespaceMapping?: {str:str}

    orLabelSelectors?: [VeleroIoV1RestoreSpecOrLabelSelectorsItems0]

    preserveNodePorts?: bool

    restorePVs?: bool

    scheduleName?: str

    hooks?: VeleroIoV1RestoreSpecHooks

    labelSelector?: VeleroIoV1RestoreSpecLabelSelector

    restoreStatus?: VeleroIoV1RestoreSpecRestoreStatus


schema VeleroIoV1RestoreSpecHooks:
    """
    Hooks represent custom behaviors that should be executed during or post restore.

    Attributes
    ----------
    resources : [VeleroIoV1RestoreSpecHooksResourcesItems0], default is Undefined, optional
        resources
    """


    resources?: [VeleroIoV1RestoreSpecHooksResourcesItems0]


schema VeleroIoV1RestoreSpecHooksResourcesItems0:
    """
    RestoreResourceHookSpec defines one or more RestoreResrouceHooks that should be executed based on the rules defined for namespaces, resources, and label selector.

    Attributes
    ----------
    excludedNamespaces : [str], default is Undefined, optional
        ExcludedNamespaces specifies the namespaces to which this hook spec does not apply.
    excludedResources : [str], default is Undefined, optional
        ExcludedResources specifies the resources to which this hook spec does not apply.
    includedNamespaces : [str], default is Undefined, optional
        IncludedNamespaces specifies the namespaces to which this hook spec applies. If empty, it applies to all namespaces.
    includedResources : [str], default is Undefined, optional
        IncludedResources specifies the resources to which this hook spec applies. If empty, it applies to all resources.
    labelSelector : VeleroIoV1RestoreSpecHooksResourcesItems0LabelSelector, default is Undefined, optional
        label selector
    name : str, default is Undefined, required
        Name is the name of this hook.
    postHooks : [VeleroIoV1RestoreSpecHooksResourcesItems0PostHooksItems0], default is Undefined, optional
        PostHooks is a list of RestoreResourceHooks to execute during and after restoring a resource.
    """


    excludedNamespaces?: [str]

    excludedResources?: [str]

    includedNamespaces?: [str]

    includedResources?: [str]

    labelSelector?: VeleroIoV1RestoreSpecHooksResourcesItems0LabelSelector

    name: str

    postHooks?: [VeleroIoV1RestoreSpecHooksResourcesItems0PostHooksItems0]


schema VeleroIoV1RestoreSpecHooksResourcesItems0LabelSelector:
    """
    LabelSelector, if specified, filters the resources to which this hook spec applies.

    Attributes
    ----------
    matchExpressions : [VeleroIoV1RestoreSpecHooksResourcesItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [VeleroIoV1RestoreSpecHooksResourcesItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema VeleroIoV1RestoreSpecHooksResourcesItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema VeleroIoV1RestoreSpecHooksResourcesItems0PostHooksItems0:
    """
    RestoreResourceHook defines a restore hook for a resource.

    Attributes
    ----------
    exec : VeleroIoV1RestoreSpecHooksResourcesItems0PostHooksItems0Exec, default is Undefined, optional
        exec
    init : VeleroIoV1RestoreSpecHooksResourcesItems0PostHooksItems0Init, default is Undefined, optional
        init
    """


    exec?: VeleroIoV1RestoreSpecHooksResourcesItems0PostHooksItems0Exec

    init?: VeleroIoV1RestoreSpecHooksResourcesItems0PostHooksItems0Init


schema VeleroIoV1RestoreSpecHooksResourcesItems0PostHooksItems0Exec:
    """
    Exec defines an exec restore hook.

    Attributes
    ----------
    command : [str], default is Undefined, required
        Command is the command and arguments to execute from within a container after a pod has been restored.
    container : str, default is Undefined, optional
        Container is the container in the pod where the command should be executed. If not specified, the pod's first container is used.
    execTimeout : str, default is Undefined, optional
        ExecTimeout defines the maximum amount of time Velero should wait for the hook to complete before considering the execution a failure.
    onError : str, default is Undefined, optional
        OnError specifies how Velero should behave if it encounters an error executing this hook.
    waitTimeout : str, default is Undefined, optional
        WaitTimeout defines the maximum amount of time Velero should wait for the container to be Ready before attempting to run the command.
    """


    command: [str]

    container?: str

    execTimeout?: str

    onError?: "Continue" | "Fail"

    waitTimeout?: str


    check:
        len(command) >= 1


schema VeleroIoV1RestoreSpecHooksResourcesItems0PostHooksItems0Init:
    """
    Init defines an init restore hook.

    Attributes
    ----------
    initContainers : [any], default is Undefined, optional
        InitContainers is list of init containers to be added to a pod during its restore.
    timeout : str, default is Undefined, optional
        Timeout defines the maximum amount of time Velero should wait for the initContainers to complete.
    """


    initContainers?: [any]

    timeout?: str


schema VeleroIoV1RestoreSpecLabelSelector:
    """
    LabelSelector is a metav1.LabelSelector to filter with when restoring individual objects from the backup. If empty or nil, all objects are included. Optional.

    Attributes
    ----------
    matchExpressions : [VeleroIoV1RestoreSpecLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [VeleroIoV1RestoreSpecLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema VeleroIoV1RestoreSpecLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema VeleroIoV1RestoreSpecOrLabelSelectorsItems0:
    """
    A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.

    Attributes
    ----------
    matchExpressions : [VeleroIoV1RestoreSpecOrLabelSelectorsItems0MatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [VeleroIoV1RestoreSpecOrLabelSelectorsItems0MatchExpressionsItems0]

    matchLabels?: {str:str}


schema VeleroIoV1RestoreSpecOrLabelSelectorsItems0MatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema VeleroIoV1RestoreSpecRestoreStatus:
    """
    RestoreStatus specifies which resources we should restore the status field. If nil, no objects are included. Optional.

    Attributes
    ----------
    excludedResources : [str], default is Undefined, optional
        ExcludedResources specifies the resources to which will not restore the status.
    includedResources : [str], default is Undefined, optional
        IncludedResources specifies the resources to which will restore the status. If empty, it applies to all resources.
    """


    excludedResources?: [str]

    includedResources?: [str]


schema VeleroIoV1RestoreStatus:
    """
    RestoreStatus captures the current status of a Velero restore

    Attributes
    ----------
    completionTimestamp : str, default is Undefined, optional
        CompletionTimestamp records the time the restore operation was completed. Completion time is recorded even on failed restore. The server's time is used for StartTimestamps
    errors : int, default is Undefined, optional
        Errors is a count of all error messages that were generated during execution of the restore. The actual errors are stored in object storage.
    failureReason : str, default is Undefined, optional
        FailureReason is an error that caused the entire restore to fail.
    phase : str, default is Undefined, optional
        Phase is the current state of the Restore
    restoreItemOperationsAttempted : int, default is Undefined, optional
        RestoreItemOperationsAttempted is the total number of attempted async RestoreItemAction operations for this restore.
    restoreItemOperationsCompleted : int, default is Undefined, optional
        RestoreItemOperationsCompleted is the total number of successfully completed async RestoreItemAction operations for this restore.
    restoreItemOperationsFailed : int, default is Undefined, optional
        RestoreItemOperationsFailed is the total number of async RestoreItemAction operations for this restore which ended with an error.
    startTimestamp : str, default is Undefined, optional
        StartTimestamp records the time the restore operation was started. The server's time is used for StartTimestamps
    validationErrors : [str], default is Undefined, optional
        ValidationErrors is a slice of all validation errors (if applicable)
    warnings : int, default is Undefined, optional
        Warnings is a count of all warning messages that were generated during execution of the restore. The actual warnings are stored in object storage.
    progress : VeleroIoV1RestoreStatusProgress, default is Undefined, optional
        progress
    """


    completionTimestamp?: str

    errors?: int

    failureReason?: str

    phase?: "New" | "FailedValidation" | "InProgress" | "WaitingForPluginOperations" | "WaitingForPluginOperationsPartiallyFailed" | "Completed" | "PartiallyFailed" | "Failed"

    restoreItemOperationsAttempted?: int

    restoreItemOperationsCompleted?: int

    restoreItemOperationsFailed?: int

    startTimestamp?: str

    validationErrors?: [str]

    warnings?: int

    progress?: VeleroIoV1RestoreStatusProgress


schema VeleroIoV1RestoreStatusProgress:
    """
    Progress contains information about the restore's execution progress. Note that this information is best-effort only -- if Velero fails to update it during a restore for any reason, it may be inaccurate/stale.

    Attributes
    ----------
    itemsRestored : int, default is Undefined, optional
        ItemsRestored is the number of items that have actually been restored so far
    totalItems : int, default is Undefined, optional
        TotalItems is the total number of items to be restored. This number may change throughout the execution of the restore due to plugins that return additional related items to restore
    """


    itemsRestored?: int

    totalItems?: int


